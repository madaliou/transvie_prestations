{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/madaliou/Web/transvie-prestations/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';  // Importer useRouter pour la redirection\nimport Link from 'next/link';  // Importer le composant Link de Next.js\n\nexport default function Home() {\n  const router = useRouter();  // Instancier le routeur\n  const [date, setDate] = useState('');\n  const [agenceId, setAgenceId] = useState('');\n  const [prestationId, setPrestationId] = useState('');\n  const [cout, setCout] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const [agencesList, setAgencesList] = useState<{ id: number; name: string }[]>([]);\n  const [prestationsList, setPrestationsList] = useState<{ id: number; name: string }[]>([]);\n\n  useEffect(() => {\n    // V√©rification du token d'authentification\n    const token = localStorage.getItem('token');\n    if (!token) {\n      // Redirige l'utilisateur vers la page de login si le token est absent\n      router.push('/login');\n    }\n\n    // Fonction pour r√©cup√©rer les agences\n    const fetchAgences = async () => {\n      const res = await fetch('http://localhost:3001/api/agences');\n      const data = await res.json();\n      setAgencesList(data);\n    };\n  \n    // Fonction pour r√©cup√©rer les prestations\n    const fetchPrestations = async () => {\n      const res = await fetch('http://localhost:3001/api/prestations-types');\n      const data = await res.json();\n      setPrestationsList(data);\n    };\n  \n    fetchAgences();\n    fetchPrestations();\n  }, [router]); // Le useEffect se d√©clenche uniquement une fois au montage\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    const payload = {\n      agenceId: parseInt(agenceId),\n      prestationId: parseInt(prestationId),\n      date,\n      cout: parseFloat(cout)\n    };\n    const token = localStorage.getItem('token');\n    const res = await fetch('http://localhost:3001/api/prestations', {\n      method: 'POST',\n      headers: { \n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(payload)\n    });\n\n    const data = await res.json();\n\n    if (data.message) {\n      setSuccessMessage(\"üéâ Prestation enregistr√©e avec succ√®s !\");\n    }\n\n    setAgenceId('');\n    setDate('');\n    setPrestationId('');\n    setCout('');\n  };\n\n  // Auto-fermeture du message apr√®s 5 secondes\n  useEffect(() => {\n    if (successMessage) {\n      const timer = setTimeout(() => {\n        setSuccessMessage('');\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [successMessage]);\n\n  return (\n    <main style={styles.container}>\n      <img src=\"/logo.webp\" alt=\"Logo Transvie\" style={styles.logo} />\n      <h2 style={styles.title}>Enregistrement de prestation</h2>\n\n      {successMessage && (\n        <div style={styles.successMessage}>\n          <span>{successMessage}</span>\n          <button type=\"button\" style={styles.closeButton} onClick={() => setSuccessMessage('')}>\n            ‚úñ\n          </button>\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} style={styles.form}>\n        <label>Agence</label>\n        <select required value={agenceId} onChange={(e) => setAgenceId(e.target.value)} style={styles.input}>\n          <option value=\"\">-- Choisissez une agence --</option>\n          {agencesList.map((a) => (\n            <option key={a.id} value={a.id}>{a.name}</option>\n          ))}\n        </select>\n\n        <label>Date</label>\n        <input type=\"date\" required value={date} onChange={(e) => setDate(e.target.value)} style={styles.input} />\n\n        <label>Prestation</label>\n        <select required value={prestationId} onChange={(e) => setPrestationId(e.target.value)} style={styles.input}>\n          <option value=\"\">-- Choisissez une prestation --</option>\n          {prestationsList.map((p) => (\n            <option key={p.id} value={p.id}>{p.name}</option>\n          ))}\n        </select>\n\n        <label>Co√ªt (FCFA)</label>\n        <input\n          type=\"number\"\n          required\n          value={cout}\n          onChange={(e) => setCout(e.target.value)}\n          style={styles.input}\n        />\n\n        <button type=\"submit\" style={styles.button}>Enregistrer</button>\n      </form>\n\n      {/* Lien vers la page des KPI */}\n      <Link href=\"/kpi\">\n        <button style={styles.kpiButton}>Voir les KPI</button>\n      </Link>\n    </main>\n  );\n}\n\nconst styles: { [key: string]: React.CSSProperties } = {\n  container: {\n    maxWidth: '500px',\n    margin: '40px auto',\n    padding: '30px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '10px',\n    boxShadow: '0 3px 15px rgba(0,0,0,0.1)',\n    fontFamily: 'Segoe UI, sans-serif',\n    color: '#344767',\n    position: 'relative'\n  },\n  logo: {\n    display: 'block',\n    margin: '0 auto 20px',\n    maxWidth: '150px',\n    height: 'auto'\n  },\n  title: {\n    textAlign: 'center',\n    color: '#007bff',\n    marginBottom: '20px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px'\n  },\n  input: {\n    padding: '10px',\n    fontSize: '16px',\n    borderRadius: '6px',\n    border: '1px solid #ccc',\n    backgroundColor: '#ffffff',\n    color: '#344767'\n  },\n  button: {\n    padding: '12px',\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    borderRadius: '6px',\n    fontSize: '16px',\n    fontWeight: 600,\n    cursor: 'pointer'\n  },\n  successMessage: {\n    backgroundColor: '#d4edda',\n    color: '#155724',\n    padding: '15px 20px',\n    borderRadius: '6px',\n    marginBottom: '20px',\n    fontSize: '16px',\n    textAlign: 'center',\n    position: 'relative'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: '10px',\n    right: '12px',\n    background: 'transparent',\n    border: 'none',\n    fontSize: '18px',\n    fontWeight: 'bold',\n    color: '#155724',\n    cursor: 'pointer'\n  },\n  kpiButton: {\n    marginTop: '20px',\n    padding: '12px',\n    backgroundColor: '#28a745',\n    color: 'white',\n    border: 'none',\n    borderRadius: '6px',\n    fontSize: '16px',\n    cursor: 'pointer'\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}